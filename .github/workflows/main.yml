name: CI MLflow

on:
  push:
    branches:
      - main

env:
  CSV_URL: "MLProject/diabetes_prediction_dataset_preprocessing.csv"
  TARGET_VAR: "Diabetes_Prediction"
  #MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  #MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
  #MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}

jobs:
  mlflow-pipelines:
    runs-on: ubuntu-latest

    steps:
      - name: Run actions/checkout@v3
        uses: actions/checkout@v3

      - name: Set up Python 3.12.7
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"

      - name: Check Env
        run: |
          echo $CSV_URL

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow python-dotenv pandas scikit-learn

      - name: Run mlflow project
        run: |
          mlflow run MLProject --env-manager=local

      - name: Get latest MLflow run_id
        id: get_run_id
        run: |
          export MLFLOW_TRACKING_URI=file:./mlruns

          experiment_id=0
          echo "experiment_id=$experiment_id" >> $GITHUB_ENV

          run_id=$(ls -1t "./mlruns/$experiment_id" | grep -E '^[a-f0-9]{32}$' | head -n 1)
          if [ -z "$run_id" ]; then
            echo "Failed to get run_id"
            exit 1
          fi

          echo "Latest run_id: $run_id"
          echo "MLFLOW_RUN_ID=$run_id" >> $GITHUB_ENV

      - name: Upload to GitHub
        run: |
          git config --local user.email "${{ secrets.USER_EMAIL }}"
          git config --local user.name "Ahmad Ibnu Fajar"
          git add mlruns/ || true
          git commit -m "Save mlruns from CI run"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.USER_TOKEN }}

      - name: Build Docker Model
        run: |
          mlflow models build-docker -m "runs:/${{ env.MLFLOW_RUN_ID }}/model" -n "diabetes-prediction"

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Tag Docker Image
        run: |
          docker tag diabetes-prediction ${{ secrets.DOCKER_HUB_USERNAME }}/diabetes-prediction:0.0.1

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/diabetes-prediction:0.0.1